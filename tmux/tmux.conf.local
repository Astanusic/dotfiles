# https://github.com/gpakosz/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012— Gregory Pakosz (@gpakosz).

# -- navigation ----------------------------------------------------------------

# if you're running tmux within iTerm2
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
#set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

# -- windows & pane creation ---------------------------------------------------

# new window retains current path
tmux_conf_new_window_retain_current_path=false

# new pane retains current path
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session
tmux_conf_new_session_prompt=false

# -- display -------------------------------------------------------------------

# RGB 24-bit colour support (tmux >= 2.2)
tmux_conf_24b_colour=true

thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#222032"
thm_gray="#4c495e"
thm_magenta="#c6a0f6"
thm_pink="#f5bde6"
thm_red="#f38ba8"
thm_green="#206982"
thm_yellow="#eed49f"
thm_blue="#8aadf4"
thm_orange="#fab972"
thm_black4="#635f7a"

tmux_conf_theme_colour_1="#1e1e2e"    # dark gray
tmux_conf_theme_colour_2="#585b70"    # light gray
tmux_conf_theme_colour_3="#635f7a"    # gray
tmux_conf_theme_colour_4="#89dceb"    # blue
tmux_conf_theme_colour_5="#fab387"    # yellow
tmux_conf_theme_colour_6="#222032"    # dark gray
tmux_conf_theme_colour_7="#cdd6f4"    # white
tmux_conf_theme_colour_8="#222032"    # dark gray
tmux_conf_theme_colour_9="#fAB972"    # yellow
tmux_conf_theme_colour_10="#f38ba8"   # pink
tmux_conf_theme_colour_11="#206982"   # green
tmux_conf_theme_colour_12="#635f7a"   # gray
tmux_conf_theme_colour_13="#cdd6f4"   # white
tmux_conf_theme_colour_14="#181825"   # dark gray
tmux_conf_theme_colour_15="#313244"   # dark gray
tmux_conf_theme_colour_16="#F06587"   # red
tmux_conf_theme_colour_17="#dbd9f1"   # white
tmux_conf_theme_colour_18="#4c495e"   # dark gray
tmux_conf_theme_colour_19="#8e8aa8"   # light gray

# window style
tmux_conf_theme_window_fg="default"
tmux_conf_theme_window_bg="default"

# highlight focused pane (tmux >= 2.1)
tmux_conf_theme_highlight_focused_pane=false
tmux_conf_theme_focused_pane_bg="$tmux_conf_theme_colour_2"

# pane border style
tmux_conf_theme_pane_border_style=thin

# pane borders colours:
tmux_conf_theme_pane_border="$tmux_conf_theme_colour_2"
tmux_conf_theme_pane_active_border="$tmux_conf_theme_colour_4"

# pane indicator colours (when you hit <prefix> + q)
tmux_conf_theme_pane_indicator="$tmux_conf_theme_colour_11"
tmux_conf_theme_pane_active_indicator="$tmux_conf_theme_colour_11"

# status line style the tmux sys message
tmux_conf_theme_message_fg="$tmux_conf_theme_colour_14"
tmux_conf_theme_message_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_attr="bold"

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_command_bg="$tmux_conf_theme_colour_18"
tmux_conf_theme_message_command_attr="bold"

# window modes style (<prefix> s)
tmux_conf_theme_mode_fg="$tmux_conf_theme_colour_18"
tmux_conf_theme_mode_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_mode_attr="bold"

# status line style --reminder fix
tmux_conf_theme_status_fg="$thm_pink"
tmux_conf_theme_status_bg="$tmux_conf_theme_colour_6"
tmux_conf_theme_status_attr="none"

tmux_conf_theme_terminal_title="❐ #S ● #I #W"

# window current status style
tmux_conf_theme_window_status_current_fg="$tmux_conf_theme_colour_7" # Active window
tmux_conf_theme_window_status_current_bg="$tmux_conf_theme_colour_11"
tmux_conf_theme_window_status_current_attr="bold"
tmux_conf_theme_window_status_current_format="#I #W"

# window activity status style
tmux_conf_theme_window_status_activity_fg="default"
tmux_conf_theme_window_status_activity_bg="default"
tmux_conf_theme_window_status_activity_attr="underscore"

# window bell status style
tmux_conf_theme_window_status_bell_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_window_status_bell_bg="default"
tmux_conf_theme_window_status_bell_attr="blink,bold"

# window unactive style
tmux_conf_theme_window_status_fg="$tmux_conf_theme_colour_2"
tmux_conf_theme_window_status_bg="$tmux_conf_theme_colour_18"
tmux_conf_theme_window_status_attr="none"
tmux_conf_theme_window_status_format="#I #W"

# window last status style
tmux_conf_theme_window_status_last_fg="$tmux_conf_theme_colour_7"
tmux_conf_theme_window_status_last_bg="$tmux_conf_theme_colour_19"
tmux_conf_theme_window_status_last_attr="none"

# ----- no powerline ------------------
# status left/right sections separators
tmux_conf_theme_left_separator_main=""
tmux_conf_theme_left_separator_sub="|"
tmux_conf_theme_right_separator_main=""
tmux_conf_theme_right_separator_sub="|"

# tmux_conf_theme_status_left=" ❐ #S "
tmux_conf_theme_status_right="#{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_bg]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_fg] #{mouse}#{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_bg]#[fg=$thm_blue]#[bg=$thm_bg]#[fg=$thm_fg]#[bg=$thm_blue]#{username}#{root}#[fg=$thm_blue]#[bg=$thm_bg]"

# status left style
# tmux_conf_theme_status_left_fg="$tmux_conf_theme_colour_6"
# tmux_conf_theme_status_left_bg="$tmux_conf_theme_colour_10"
# tmux_conf_theme_status_left_attr="bold, none"

# status right style
tmux_conf_theme_status_right_fg="$tmux_conf_theme_colour_18,$tmux_conf_theme_colour_18"
tmux_conf_theme_status_right_bg="$tmux_conf_theme_colour_4,$tmux_conf_theme_colour_5"
tmux_conf_theme_status_right_attr="none,bold"

# pairing indicator
tmux_conf_theme_pairing="⚇"                 # U+2687
tmux_conf_theme_pairing_fg="none"
tmux_conf_theme_pairing_bg="none"
tmux_conf_theme_pairing_attr="none"

# prefix indicator
tmux_conf_theme_prefix="p"                  # U+2328
# tmux_conf_theme_prefix="⌨"                  # U+2328
tmux_conf_theme_prefix_fg="none"
tmux_conf_theme_prefix_bg="none"
tmux_conf_theme_prefix_attr="none"

# mouse indicator
tmux_conf_theme_mouse="m"                   # U+2197
# tmux_conf_theme_mouse="↗"                   # U+2197
tmux_conf_theme_mouse_fg="none"
tmux_conf_theme_mouse_bg="none"
tmux_conf_theme_mouse_attr="none"

# root indicator
# tmux_conf_theme_root="!"
tmux_conf_theme_root="r"
tmux_conf_theme_root_fg="none"
tmux_conf_theme_root_bg="none"
tmux_conf_theme_root_attr="bold,blink"

# synchronized indicator
tmux_conf_theme_synchronized="⚏"            # U+268F
tmux_conf_theme_synchronized_fg="none"
tmux_conf_theme_synchronized_bg="none"
tmux_conf_theme_synchronized_attr="none"

# clock style (when you hit <prefix> + t)
# you may want to use %I:%M %p in place of %R in tmux_conf_theme_status_right
tmux_conf_theme_clock_colour="$tmux_conf_theme_colour_11"
tmux_conf_theme_clock_style="24"

# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=false


# -- user customizations -------------------------------------------------------
#set -g history-limit 10000

set -g mouse on

# dont detach tmux when killing a session
set-option -g detach-on-destroy off

unbind C-b
set -g prefix C-a
bind C-a send-prefix

# session rename easier
unbind-key $
unbind-key .
bind-key . command-prompt "rename-session '%%'"
# window rename easier
unbind-key ,
bind-key , command-prompt "rename-window '%%'"
unbind-key c
unbind-key C-c
bind-key c command-prompt "new-window -n '%%'"
bind-key C-c command-prompt "new-session -s '%%' -n '%%'"

# use telescope-tmux for picking sessions and windows 
unbind-key s
unbind-key w
bind C-s popup -E -w 40% -h 40% "tmux list-sessions -F '#{session_name}' | sed '/^$/d' | fzf --reverse --bind 'ctrl-d:execute:tmux kill-session -t {} \; exit 0' | xargs tmux switch-client -t"
bind C-f popup -E -w 80% -h 80% '~/.local/bin/tmux-sessionizer.sh'
bind C-o popup -w 80% -h 80% '~/.local/bin/git-fuzzy-log.sh'
bind C-p popup -w 80% -h 80% '~/.local/bin/git-fuzzy-diff.sh'

# Same as above but use nvim tmux plugin, I find it too slow and even more on gpu that dont render with gpu
# bind C-s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
# bind C-w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows quit_on_select=true"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

# Open htop in either a popup or in a new session
bind-key 'C-x' if-shell 'tmux has-session -t monitoring' 'switch-client -t monitoring' \
                  'new-session -s monitoring -d htop ; switch-client -t monitoring'
bind-key -n 'C-x' popup -E -w 80% -h 80% "htop"


# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

set -g status-position bottom # available bottom/top

# -- tpm -----------------------------------------------------------------------

# while I don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=false

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=true

# by default, reloading the configuration will uninstall tpm and plugins when no
# plugins are enabled
#   - true (default)
#   - false
tmux_conf_uninstall_plugins_on_reload=false

# /!\ the tpm bindings differ slightly from upstream:
#   - installing plugins: <prefix> + I
#   - uninstalling plugins: <prefix> + Alt + u
#   - updating plugins: <prefix> + u

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'macchiato' # or frappe, macchiato, mocha
set -g @catppuccin_window_tabs_enabled on # or off to disable window_tabs

# set -g status-interval 10

# -- custom variables ----------------------------------------------------------

# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.

# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# weather() {
#   curl -m 1 wttr.in?format=3 2>/dev/null
#   sleep 900 # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# online() {
#   ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '✔' || printf '✘'
# }
#
# "$@"
# # /!\ do not remove the previous lines

